import "math"

ts = from(bucket: "training")
    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
    |> filter(fn: (r) => r["_measurement"] == "iot-oven")
    |> filter(fn: (r) => r["_field"] == "temperature")
// Use the following to avoid ts1B and ts2B
//  |> aggregateWindow(every: 60s, fn: mean)

ts1 = ts
    |> filter(fn: (r) => r["sensor"] == "S1")
ts2 = ts
    |> filter(fn: (r) => r["sensor"] == "S2")

ts1B = ts1
    |> aggregateWindow(every: 60s, fn: mean)
ts2B = ts2
    |> aggregateWindow(every: 60s, fn: mean)

join(tables: {s1: ts1B, s2: ts2B}, on: ["_time"], method: "inner")
    |> map(fn: (r) => ({
        _time: r._time,
        _value: math.abs(x: (r._value_s1 - r._value_s2 - 175.0)) 
    }))
